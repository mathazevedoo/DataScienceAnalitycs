pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Carregando um shapefile -------------------------------------------------
shp_sp <- readOGR(dsn = "shapefile_sp", layer = "estado_sp")
# Características básicas do objeto shp_sp
summary(shp_sp)
View(shp_sp)
# Classe e tipo do objeto carregado
class(shp_sp)
# Para acessar a base de dados de um shapefile, devemos utilizar o operador @:
shp_sp@data
shp_sp@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# Para acessar os outros componentes do shapefile, utilizaremos o operador @:
shp_sp@polygons #Posições geográficas dos polígonos
shp_sp@plotOrder #Ordem de plotagem dos polígonos
# Plotagem básica de um shapefile -----------------------------------------
plot(shp_sp)
area(shp_sp) / 1000000
shp_sp@data["area_aproximada"] <- area(shp_sp) / 1000000
shp_sp@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# Observando a base de dados carregada
dados_sp %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# Carregando uma base de dados real a respeito dos municípios de SP:
load("dados_sp.RData")
# Observando a base de dados carregada
dados_sp %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# Observando a base de dados carregada
dados_sp %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# Para combinar os dados do objeto dados_sp com a base de dados de nosso
# shapefile, podemos utilizar a função merge():
shp_dados_sp <- merge(x = shp_sp,
y = dados_sp,
by.x = "CD_GEOCMU",
by.y = "codigo")
shp_dados_sp@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# Salvando nosso shapefile:
writeOGR(obj = shp_dados_sp,
layer = "nosso_novo_shapefile",
driver = "ESRI Shapefile",
dsn = "mbadsa")
# Caso a intenção fosse a plotagem dos dados do dataset presente no objeto
# shp_dados_sp, a lógica seria a mesma já aprendida no curso:
shp_dados_sp@data %>%
ggplot() +
geom_histogram(aes(x = idh),
fill = "deepskyblue4",
color = "white") +
labs(x = "IDH",
y = "Frequência") +
theme_bw()
# Passo 1: Transformar o shapefile num objeto do tipo data frame e, depois,
# importar os dados que já estavam no shapefile para o novo objeto data frame.
shp_dados_df <- tidy(shp_dados_sp, region = "CD_GEOCMU") %>%
rename(CD_GEOCMU = id) %>%
left_join(shp_dados_sp@data,
by = "CD_GEOCMU")
#Passo 2: A plotagem.
shp_dados_df %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = idh),
color = "black") +
labs(x = "Longitude",
y = "Latitude",
color = "IDH") +
scale_fill_viridis_c() +
theme_bw()
# Utilizando a tmap: ------------------------------------------------------
tm_shape(shp = shp_dados_sp) +
tm_fill(col = "idh", palette = "Blues")
# Adicionando um histograma ao mapa anterior
tm_shape(shp = shp_dados_sp) +
tm_fill(col = "idh",
style = "quantile",
n = 2,
palette = "Greens",
legend.hist = TRUE)
# Adicionando um histograma ao mapa anterior
tm_shape(shp = shp_dados_sp) +
tm_fill(col = "idh",
style = "quantile",
n = 8,
palette = "Greens",
legend.hist = TRUE)
# Posicionando manualmente o histograma, e adicionando um título
tm_shape(shp = shp_dados_sp) +
tm_fill(col = "idh",
style = "quantile",
n = 4,
palette = "BuPu",
legend.hist = TRUE) +
tm_layout(legend.text.size = 0.7,
legend.title.size = 0.9,
legend.hist.size = 0.5,
legend.hist.height = 0.2,
legend.hist.width = 0.3,
frame = FALSE,
main.title = "A Distribuição do IDH nos Municípios de SP")
# Adicionando uma bússola e bordas aos polígonos
tm_shape(shp = shp_dados_sp) +
tm_fill(col = "idh",
style = "quantile",
n = 4,
palette = "Reds",
legend.hist = TRUE) +
tm_layout(legend.text.size = 0.7,
legend.title.size = 0.9,
legend.hist.size = 0.5,
legend.hist.height = 0.2,
legend.hist.width = 0.3,
frame = F,
main.title = "A Distribuição do IDH nos Municípios de SP") +
tm_borders(alpha = 0.8) +
tm_compass(type = "8star",
show.labels = 3)
# Carregando um novo shapefile:
shp_mundo <- readOGR(dsn = "shapefile_mundo", layer = "mundo")
# Visualizando o shapefile shp_mundo:
tm_shape(shp = shp_mundo) +
tm_borders()
# Observando as variáveis da base de dados do objeto shp_mundo:
shp_mundo@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
